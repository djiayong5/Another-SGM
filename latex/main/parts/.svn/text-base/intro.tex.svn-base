Часто при проектировании сталкиваются с ситуацией, когда поведение объекта
определяется его некоторым текущим состоянием. Например, электронные наручные
часы могут находиться в состояниях: <<время>>, <<дата>>, <<секундомер>> и~т.~д.
~\cite{harel87statecharts}.

Как правило, подобные конструкции естественно появляются при проектировании
реактивных систем --- событийно-управляемых систем, реагирующих на
воздействия внешней среды. Существующие средства построения подобных
систем: SWITCH-технология~\cite{SWITCH}, паттерны проектирования~\cite{GAMMA,ADAMCZYK} или различные 
средства генерации кода ~\cite{HarelKugler04, harel96statemate, UniModSite} часто 
оказываются недостаточно мощными или недостаточно гибкими для построения 
систем с большим числом состояний и сложной их структурой. Другой проблемой 
является отсутствие общепринятой семантики таких систем.

В этой работе исследуются общие принципы построения систем с выделенными
состояниями, поведение которых описано при помощи диаграмм состояний (Statechart),
предложенных Дэвидом Харелом. Диаграммы состояний  
выбраны как наиболее гибкая, функциональная, универсальная и наглядная, на наш взгляд, 
форма представления поведения системы. Впервые эти диаграммы были предложены 
Харелом в 1987 году в статье ~\cite{harel87statecharts}. Впоследствии эти диаграммы   
почти без изменений были включены в язык UML~\cite{UMLBOOK2}.

В главе~\ref{chapter_owerview} выполнен обзор существующих методов построения
реактивных систем на основе диаграмм состояний и схожих конструкций. 

В главе~\ref{chapter_pattern} предлагается новый метод построения таких систем. 
Метод включает описание структуры модели, семантики и паттерн проектирования, 
позволяющий ее реализовать.

В главе~\ref{chapter_library} описана библиотека на языке \emph{Java}, реализующая
предложенный паттерн, и приведены примеры использования этой библиотеки.
